apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}"
    implementation "org.projectlombok:lombok:${lombak_version}"
    testCompileOnly("org.projectlombok:lombok:${lombak_version}")
    annotationProcessor("org.projectlombok:lombok:${lombak_version}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombak_version}")
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.twitter4j:twitter4j-stream:4.0.6'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

// Define the main class for the application
springBoot {
    mainClassName = 'com.defmacros.goodrecipes.backendsvc.BackendServiceApplication'
}

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}
docker {
    name "${project.group}/${bootJar.baseName}"
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}

